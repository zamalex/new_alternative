
void searchWithAI() async {
    setState(() {
      isLoading = true;
    });
    setState(() {
      if (selectedFile != null) {
        final file = File(selectedFile!.path);
        gemini.textAndImage(

            generationConfig: GenerationConfig(  temperature:0 /*0.5,
              maxOutputTokens: 100,
              topP: 1.0,
              topK: 40,*/),
            text:
                "what is the brand name and  the country developed it?, making the response exactly in this format: brand name:, brand country:",

            /// text
            images: [file.readAsBytesSync()]

            /// list of images
            ).then((value) {
          setState(() {

            log(value?.content?.parts?.last.text ?? '');
            final response = value?.content?.parts?.last.text ?? '';
            isLoading = false;
            print(response);
            showDialog(
              context: context,
              builder: (context) => Center(
                  child: Container(
                width: double.infinity,
                decoration: BoxDecoration(
                    color: Colors.white,
                    borderRadius: BorderRadius.circular(10)),
                child: Column(
                  mainAxisSize: MainAxisSize.min,
                  children: [
                    Text(
                      'AI response',
                      style:
                          TextStyle(fontWeight: FontWeight.bold, fontSize: 18),
                      textAlign: TextAlign.center,
                    ),
                    Text(
                      response,
                      textAlign: TextAlign.center,
                    ),
                    SizedBox(
                      height: 10,
                    ),
                    Row(
                      children: [
                        Expanded(
                            child: TextButton.icon(
                                onPressed: () {
                                  Navigator.pop(context);
                                },
                                icon: Icon(
                                  Icons.cancel,
                                  color: Colors.red,
                                ),
                                label: Text('Cancel',
                                    style: TextStyle(color: Colors.red)))),
                        SizedBox(
                          width: 10,
                        ),
                        Expanded(
                            child: TextButton.icon(
                                onPressed: () {
                                  Navigator.pop(context);
                                  Navigator.push(
                                      context,
                                      MaterialPageRoute(
                                        builder: (context) => AddBrandScreen(
                                          aiFile: file,
                                          aiCountry: extractBrandAndCountry(
                                              response)['country'],
                                          aiName: extractBrandAndCountry(
                                              response)['brand'],
                                        ),
                                      ));
                                },
                                icon: Icon(
                                  Icons.add,
                                  color: Colors.green,
                                ),
                                label: Text(
                                  'Add',
                                  style: TextStyle(color: Colors.green),
                                ))),
                      ],
                    )
                  ],
                ),
                margin: EdgeInsets.all(10),
                padding: EdgeInsets.all(10),
              )),
            );
          });
        }).catchError((e){
          setState(() {
            isLoading = false;
            showErrorMessage(context, 'No available data');
          });
        });
      }
    });
  }